<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>
<head>
<title>Unicode Action Plugin Help</title>

<meta http-equiv=content-type content="text/html; charset=windows-1252">

<style>

/* ELEMENTS */

body {
  font-family: Verdana, sans-serif;
  font-size: 8pt;
  background-color: #ffffff;
}

hr {
  text-align: center;
  color: #f0f0f0;
  width: 100%;
  height: 6pt;

  margin-top: 0pt;
  margin-bottom: -3pt;

  border: none;
}

A:link, A:active, A:visited {
  color: #0000ff;
  text-decoration: none;
}

A:hover {
  color: #0000ff;
  text-decoration: underline;
}

h1 {
  font-family: Verdana;
  font-weight: bold;
  font-size: 18.0pt;
  white-space: nowrap;
  color: #fff;
  background-color: #699BEF;

  padding: 4pt 3pt;
  padding: 5px 4px;

  margin-top: 0pt;
  margin-bottom: 0pt;

  border-right: 1px solid #333;
  border-left: 1px solid #699BEF;
  border-bottom: solid black 1px;
}

h2 {
  font-family: Arial, sans-serif;
  font-size: 12.0pt;
  letter-spacing: .2ex;
  color: #000;

  margin-left: 0pt;
  margin-right: 0pt;
  margin-top: 18pt;
  margin-bottom: 9pt;
}

h3 {
  font-family: Arial, sans-serif;
  font-size: 10pt;
  font-weight: bold;
  font-style: normal;
  color: black;
  letter-spacing: 0px;

  margin-left: 0pt;
  margin-right: 0pt;
  margin-top: 18pt;
  margin-bottom: 3pt;
}

p {
  font-family: Verdana;
  font-size: 8.0pt;
  line-height: 12.0pt;

  margin-left: 0pt;
  margin-right: 0pt;
  margin-top: 0pt;
  margin-bottom: 9pt;
}

/* CLASSES */

div.Actions h3, div.Events h3 {
  font-family: Arial, sans-serif;
  font-size: 10pt;
  font-weight: bold;
  font-style: italic;
  color: #3C77B3;
  letter-spacing: 0px;

  margin-left: 12pt;
  margin-right: 0pt;
  margin-top: 18pt;
  margin-bottom: 3pt;
}

div.Actions h4, div.info h3 {
  font-family: Verdana;
  font-size: 8.0pt;
  line-height: 12.0pt;
  font-style: bold;

  margin-top: 9pt;
  margin-bottom: 0pt;
  margin-left: 28pt;
  margin-right: 0pt;
}

div.Actions p, div.Events p, div.ErrorCodes p {
  font-family: Verdana;
  font-size: 8.0pt;
  line-height: 12.0pt;

  margin-top: 0pt;
  margin-bottom: 9pt;
  margin-left: 12pt;
  margin-right: 0pt;
}

p.NavLocal {
  white-space: nowrap;
  text-indent: -4px;
  font-family: Verdana, Arial, sans-serif;
  font-weight: bold;
  font-style: normal;
  font-size: 13px;
  background-color: #e4e4e4;

  margin-top: 0px;
  margin-bottom: 12pt;

  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 0px;
  padding-right: 0px;

  border-bottom: 1px solid #e4e4e4;
}

p.Note {
    font-family: Verdana;
    font-size: 8.0pt;
    line-height: 12.0pt;
    color: #000000;
    background-color: #ffffe8;

    margin-top: 0pt;
    margin-bottom: 9pt;
    margin-left: 0pt;
    margin-right: 5%;

    padding-left: 2pt;
    padding-right: 2pt;
    padding-top: 1pt;
    padding-bottom: 2pt;
}

p.Tip {
    font-family: Verdana;
    font-size: 8.0pt;
    line-height: 12.0pt;
    color: #000000;
    background-color: #EAF4E8;

    margin-top: 0pt;
    margin-bottom: 9pt;
    margin-left: 0pt;
    margin-right: 5%;

    padding-left: 2pt;
    padding-right: 2pt;
    padding-top: 1pt;
    padding-bottom: 2pt;
}

div.Actions p.Note, div.Events p.Note,
div.Actions p.Tip, div.Events p.Tip {
    margin-left: 28pt;
}

pre.code {
  white-space: pre;
  font-family: Courier New, Courier, Arial, sans-serif;
  font-size: 10pt;
  font-weight: normal;
  font-style: normal;
  letter-spacing: normal;
  color: #000;
  background-color: #f9f9f9;

  margin-top: 3pt;
  margin-bottom: 9pt;
  margin-left: 0pt;
  margin-left: 0pt;

  padding: 10px;

  border: 1px dotted #ccc;
}

div.Actions pre.code, div.Events pre.code {
  margin-left: 28pt;
}

div.Actions h2 {
  margin-bottom: -6pt;
}

div.actions p, div.info p, div.ErrorCodes p {
  margin-left: 28pt;
}

div.actions p.indent {
  margin-left: 38pt;
}

span.here { /* blue tab effect in navbar (NavLocal) */
  font-weight: bold;
  color: #fff;
  background-color: #699BEF;

  margin: 0px;

  padding: 4px 8px;

  border-top: 1px solid #699BEF;
  border-bottom: 1px solid #333;
  border-left: none;
  border-right: 1px solid #333;
}

span.type {
    color: #aaa;
}
</style>
</head>
<body>

<h1>Unicode Action Plugin</h1>

<p class="NavLocal"><span class=wab>&nbsp;</span><span class="here">Online Help</span></p>

<h2>Description</h2>

<p>
This is a small action plugin that allows you to read UTF-8 and Unicode encoded text files into a string, as well as save a string as a text file encoded in ANSI (Latin-1), UTF-8 or Unicode format. </p>

<div class="Actions">
<h2>Actions</h2>

<h3>Unicode.ReadToTable(string Filename, string Encoding);</h3>
<h4>Description:</h4>
<p>Reads the contents of a text file in UTF-8 or Unicode encoding and returns it as a table where each line is an element, in ANSI (Latin-1) encoding.</p>
<h4>Filename:</h4>
<p><span class="type">(string)</span> The full path to the text file.</p>
<h4>Encoding:</h4>
<p><span class="type">(string)</span> The encoding of the file to be read. Allowed options are: &quot;iso-8859-1&quot; (no conversion) , &quot;utf-8&quot; and &quot;unicode&quot;.</p>
<h4>Returns:</h4>
<p><span class="type">(string)</span> The converted text file as table. You can use Application.GetLastError to
determine whether this action failed, and why.</p>
<h4>Example:</h4>
<pre class="code">
-- read a text file in Unicode encoding
strFile = _TempFolder .. "\\TextFile.txt";
myTable = Unicode.ReadToTable(strFile, "unicode");
error = Application.GetLastError();
if (error ~= 0) then
    Dialog.Message("Error", "Got error code " .. error .. " while converting from Unicode", MB_OK, MB_ICONEXCLAMATION);
else
    -- now read each line in the table
    for i, text in myTable do
        Dialog.Message("info", "line " .. i .. " contains: " .. text, MB_OK);
    end
end
</pre>

<h3>Unicode.ReadToString(string Filename, string Encoding);</h3>
<h4>Description:</h4>
<p>Reads the contents of a text file in UTF-8 or Unicode encoding and returns it as a string in ANSI (Latin-1) encoding.</p>
<h4>Filename:</h4>
<p><span class="type">(string)</span> The full path to the text file.</p>
<h4>Encoding:</h4>
<p><span class="type">(string)</span> The encoding of the file to be read. Allowed options are: &quot;iso-8859-1&quot; (no conversion) , &quot;utf-8&quot; and &quot;unicode&quot;.</p>
<h4>Returns:</h4>
<p><span class="type">(string)</span> The converted text file as string. You can use Application.GetLastError to
determine whether this action failed, and why.</p>
<h4>Example:</h4>
<pre class="code">
-- read a XML file in UTF-8 encoding
strXMLPath = _TempFolder .. "\\utf8File.xml";
convertedXml = Unicode.ReadToString(strXMLPath, "utf-8");
error = Application.GetLastError();
if (error ~= 0) then
    Dialog.Message("Error", "Got error code " .. error .. " while converting from UTF-8", MB_OK, MB_ICONEXCLAMATION);
else
    -- everything ok, proceed with XML processing...
    XML.SetXML(convertedXml);
end
</pre>

<h3>Unicode.WriteFromTable(string Filename, table Text, string Encoding);</h3>
<h4>Description:</h4>
<p>Writes a table's contents out to a text file. The table should consist of one line of text per table item.</p>
<h4>Filename:</h4>
<p><span class="type">(string)</span> The full path to the text file.</p>
<h4>Text:</h4>
<p><span class="type">(table)</span> The lines of text to write.</p>
<h4>Encoding:</h4>
<p><span class="type">(string)</span> The encoding of the file to be written. Allowed options are: &quot;iso-8859-1&quot;, &quot;utf-8&quot; and &quot;unicode&quot;.</p>
<h4>Returns:</h4>
<p><span class="type">(nothing)</span> You can use Application.GetLastError to
determine whether this action failed, and why.</p>
<h4>Example:</h4>
<pre class="code">
-- save a table as text file with UTF-8 encoding
Unicode.WriteFromTable(_TempFolder .. "\\utf8File.txt", myTable, "utf-8");
if (error ~= 0) then
    Dialog.Message("Error", "Got error code " .. error .. " while converting to UTF-8", MB_OK, MB_ICONEXCLAMATION);
end</pre>

<h3>Unicode.WriteFromString(string Filename, string Text, string Encoding);</h3>
<h4>Description:</h4>
<p>Writes a string of text to a new file in a specific character encoding.</p>
<h4>Filename:</h4>
<p><span class="type">(string)</span> The full path to the text file.</p>
<h4>Text:</h4>
<p><span class="type">(string)</span> The string of text to write.</p>
<h4>Encoding:</h4>
<p><span class="type">(string)</span> The encoding of the file to be written. Allowed options are: &quot;iso-8859-1&quot;, &quot;utf-8&quot; and &quot;unicode&quot;.</p>
<h4>Returns:</h4>
<p><span class="type">(nothing)</span> You can use Application.GetLastError to
determine whether this action failed, and why.</p>
<h4>Example:</h4>
<pre class="code">
-- save a string as text file with Unicode encoding
Unicode.WriteFromString(_TempFolder .. "\\unicodeFile.txt", myString, "unicode");
if (error ~= 0) then
    Dialog.Message("Error", "Got error code " .. error .. " while converting to Unicode", MB_OK, MB_ICONEXCLAMATION);
end</pre>

<h3>&nbsp;</h3>
</div>
<!-- /Actions -->

<div class="ErrorCodes">
<h2>Error Codes</h2>
<p>
<b>12030</b> - Failed to start Unicode Actions plugin.<br>
<b>12031</b> - Conversion failed.<br>
<b>12032</b> - File not found.<br>
<b>12033</b> - Could not save file.<br>
<b>12034</b> - Internal error.<br>
</p>

</div> <!-- /ErrorCodes -->

<div class="History">
<h2>Change Log</h2>
<h3>1.0.2.0</h3>
<ul>
    <li>New actions:<br>
      <strong>Unicode.ReadToTable()</strong> and<br>
    <strong>    Unicode.WriteFromTable() </strong></li>
</ul>
<h3>1.0.1.0</h3>
<ul>
    <li>First public release </li>
</ul>
<h3>&nbsp;</h3>
</div>
<!-- /History -->


<div class="Info">
<h2>Additional Information</h2>

<h3>Author:</h3>
<p>Ulrich Peters <br>
<a href="mailto:upeters@mindquake.com.br">upeters@mindquake.com.br</a></p>

<h3>Copyright:</h3>
<p>Plugin is copyright &copy; 2009 MindQuake Servi&ccedil;os de Inform&aacute;tica Ltda.</p>

<h3>Website:</h3>
<p><a href="http://www.mindquake.com.br">http://www.mindquake.com.br</a></p>

</div> <!-- /info -->
<hr>

<p align="center">Copyright &copy; 2008-2010 MindQuake Servi&ccedil;os de Inform&aacute;tica Ltda.<br>
Todos os direitos reservados.</p>

</body>
</html>
